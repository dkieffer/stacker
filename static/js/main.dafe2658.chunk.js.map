{"version":3,"sources":["logo.svg","stack.js","token.js","menu.js","win.js","game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Stack","props","divStyle","top","this","left","height","id","className","selected","style","onClick","function","React","Component","Token","yPos","xPos","color","Menu","activeView","startGame","Win","Game","stacks","i","length","console","log","push","manageStackAction","selectedStack","tokens","selectedToken","level","quitGame","moveCounter","App","state","game","tokenSet","colorSet","stackCapacity","previouslySelectedStack","chooseRandomStack","bind","selectStack","deselectStack","moveToken","initGame","lvlup","localStorage","getItem","setItem","lvl","setState","setupGame","stackQuantity","Math","floor","colors","stackPositions","positionStacks","stack","contents","tokenCounter","j","chosenStack","token","stackPos","rowQuantity","ceil","fullRowQuantity","remainderRowQuantity","rowInventory","centerYOffset","centerXOffset","coords","stackSet","stackChoice","random","oldStackContent","Array","from","pop","map","el","topToken","stackID","key","newStackContent","checkForWin","endGame","leve","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.dafe2658.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\n// import './App.css';\n\nclass Stack extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const divStyle = {\n            top: this.props.top,\n            left: this.props.left,\n            height: this.props.height\n        };\n        let id = this.props.id;\n        let className = 'stack';\n        // console.log(this.props.selected);\n        if (this.props.selected === this.props.id) {\n            className += ' selected';\n        }\n\n        return (\n            <div id={'s' + this.props.id} className={className} style={divStyle} onClick={() => this.props.function(id)}></div>\n        )\n    }\n}\n\nexport default Stack","import React from 'react';\n// import './App.css';\nimport './colors.scss';\n\nclass Token extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        var divStyle = {\n            // backgroundColor: this.props.color,\n            top: this.props.yPos,\n            left: this.props.xPos\n        };\n        let className = 'token ' + this.props.color;\n        if (this.props.selected === this.props.id) {\n            className += ' selected';\n        }\n        return (\n            <div className={className} style={divStyle} id={'t' + this.props.id}></div>\n        )\n    }\n}\n\nexport default Token","import React from 'react';\n// import './App.css';\n\nclass Menu extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let className = 'view';\n        if (this.props.activeView === 'start') {\n            className += ' active';\n        }\n\n        return (\n            <div className={className}>\n                <div className=\"center-view\">\n                    <h1>Stacker</h1>\n                    <button className=\"button\" onClick={() => this.props.startGame()}>Play</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Menu","import React from 'react';\n// import './App.css';\n\nclass Win extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let className = 'view';\n        if (this.props.activeView === 'win') {\n            className += ' active';\n        }\n\n        return (\n            <div className={className}>\n                <div className=\"center-view\">\n                    <h1>You Stacked</h1>\n                    <button className=\"button\" onClick={() => this.props.startGame(true)}>Continue</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Win","import React from 'react';\n// import './App.css';\nimport Stack from './stack';\nimport Token from './token';\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let className = 'view';\n        if (this.props.activeView === 'game') {\n            className += ' active';\n        }\n\n        let stacks = [];\n        for (var i = 0; i < this.props.stacks.length; i++) {\n            let xPos = 'calc(50vw + ' + this.props.stacks[i].xPos + 'px)';\n            let yPos = 'calc(' + this.props.stacks[i].yPos + 'px + 50vh)';\n            let height = '103px';\n            console.log(this.props.stacks[i].yPos);\n            console.log(yPos);\n            stacks.push(<Stack top={yPos} left={xPos} height={height} id={i} function={this.props.manageStackAction} selected={this.props.selectedStack} />);\n        }\n\n        let tokens = [];\n        for (var i = 0; i < this.props.tokens.length; i++) {\n            let xPos = 'calc(' + this.props.tokens[i].xPos + 'px + 50vw)';\n            let yPos = 'calc(' + this.props.tokens[i].yPos + 'px + 50vh)';\n            tokens.push(<Token id={this.props.tokens[i].id} color={this.props.tokens[i].color} xPos={xPos} yPos={yPos} selected={this.props.selectedToken} />);\n        }\n    \n        return (\n            <div className={className}>\n                <div>\n                    {stacks}\n                    {tokens}\n                </div>\n                <div>\n                    <p className=\"hud\">{this.props.level}</p>\n                    <button className=\"button exit-button\" onClick={() => this.props.quitGame()}>Exit</button>\n                    <p className=\"counter\">{this.props.moveCounter}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Game","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Stack from './stack';\nimport Token from './token';\nimport Menu from './menu';\nimport Win from './win';\nimport Game from './game';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      activeView: 'start',\n      tokens: [],\n      stacks: [],\n      game: {\n        tokenSet: 4,\n        colorSet: 2,\n        stacks: 3,\n        stackCapacity: 4,\n        level: 1\n      },\n      selectedStack: null,\n      previouslySelectedStack: null,\n      selectedToken: null,\n      moveCounter: 0\n    }\n    this.chooseRandomStack = this.chooseRandomStack.bind(this);\n    this.startGame = this.startGame.bind(this);\n    this.manageStackAction = this.manageStackAction.bind(this);\n    this.selectStack = this.selectStack.bind(this);\n    this.deselectStack = this.deselectStack.bind(this);\n    this.moveToken = this.moveToken.bind(this);\n    this.quitGame = this.quitGame.bind(this);\n    this.initGame = this.initGame.bind(this);\n  }\n\n  initGame(lvlup) {\n    console.log('init game');\n    if (!localStorage.getItem('level')) {\n      localStorage.setItem('level', 1);\n    }\n    let lvl = localStorage.getItem('level');\n    if (lvlup) {\n      lvl++;\n    }\n    localStorage.setItem('level', lvl);\n\n    this.setState((state) => ({\n      game: {\n        ...state.game,\n        level: lvl\n      },\n      moveCounter: 0\n    }), function() {this.setupGame()})\n  }\n\n  setupGame() {\n    console.log('setup game');\n    var stackQuantity = (Math.floor(this.state.game.level * 0.25) + 3);\n    console.log('stack quantity: ' + stackQuantity);\n    this.setState((state) => ({\n      game: {\n        ...state.game,\n        stacks: stackQuantity,\n        colorSet: stackQuantity - 1\n      }\n    }), function() {this.startGame()})\n  }\n\n  startGame() {\n    console.log('start game');\n    const colors = ['one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten'];\n    let xPosSpacing = 48;\n    var stackPositions = this.positionStacks(this.state.game.stacks);\n    console.log(stackPositions);\n    let stacks = [];\n    for (let i = 0; i < this.state.game.stacks; i++) {\n      let stack = {\n        id: i,\n        xPos: stackPositions[i].xPos,\n        yPos: stackPositions[i].yPos,\n        contents: [],\n        selected: false\n      }\n      stacks.push(stack);\n    }\n    console.log(stacks);\n\n    let tokens = [];\n    let tokenCounter = 0;\n    for (let i = 0; i < (this.state.game.tokenSet); i++) {\n      for (var j = 0; j < this.state.game.colorSet; j++) {\n        \n        let chosenStack = this.chooseRandomStack(stacks);\n        let token = {\n          id: tokenCounter,\n          color: colors[j],\n          stack: chosenStack,\n          stackPos: stacks[chosenStack].contents.length,\n          xPos: stacks[chosenStack].xPos,\n          yPos: (-stacks[chosenStack].contents.length * 25) + (stacks[chosenStack].yPos + 103 - 25)\n        }\n        tokenCounter++;\n        stacks[chosenStack].contents.push(token.id)\n        tokens.push(token);\n      }\n    }\n    console.log('ready to set state');\n    this.setState((state) => ({\n      activeView: 'game',\n      stacks: stacks,\n      tokens: tokens\n    }), function() {console.log(this.state.stacks)})\n  }\n\n  positionStacks(stacks) {\n    console.log('position stacks');\n    const maxRowLength = 5;\n    const stackWidth = 48;\n    const stackHeight = 103;\n    const stackSpacer = 12;\n\n    var stackQuantity = stacks;\n    var rowQuantity = Math.ceil(stackQuantity / maxRowLength);\n    var fullRowQuantity = Math.ceil(stackQuantity / rowQuantity);\n    var remainderRowQuantity = stackQuantity % fullRowQuantity;\n    if (remainderRowQuantity === 0) {\n      remainderRowQuantity = fullRowQuantity;\n    }\n    var rowInventory = [];\n    if (stackQuantity < maxRowLength) {\n      rowInventory.push(stackQuantity);\n    } else {\n      rowInventory.push(remainderRowQuantity);\n      for (var i = 0; i < rowQuantity - 1; i++) {\n        rowInventory.push(fullRowQuantity);\n      }\n    }\n    // console.log(rowInventory);\n    \n    var stackPositions = [];\n    let centerYOffset = (((rowQuantity * stackHeight) + ((rowQuantity - 1) * stackSpacer)) / 2);\n    for (var i = 0; i < rowInventory.length; i++) {\n      let centerXOffset = (((rowInventory[i] * stackWidth) + ((rowInventory[i] - 1) * stackSpacer)) / 2);\n      for(var j = 0; j < rowInventory[i]; j++) {\n        let coords = {\n          xPos: (stackWidth * j) + (stackSpacer * j) - centerXOffset,\n          yPos: (stackHeight * i) + (stackSpacer * i) - centerYOffset\n        }\n        stackPositions.push(coords);\n      }\n    }\n    // console.log(stackPositions);\n    return stackPositions;\n  }\n\n  chooseRandomStack(stackSet) {\n    console.log('choose random stack');\n    var stackChoice = Math.floor(Math.random() * this.state.game.stacks);\n    while (stackSet[stackChoice].contents.length > this.state.game.stackCapacity - 1) {\n      stackChoice = Math.floor(Math.random() * this.state.game.stacks)\n    }\n    return stackChoice;\n  }\n\n  manageStackAction(id) {\n    if (this.state.selectedStack === null) {\n      if (this.state.stacks[id].contents.length > 0) {\n        this.setState((state) => ({\n          previouslySelectedStack: id\n        }))\n        this.selectStack(id);\n      } else {\n        return\n      }\n    } else {\n      if (this.state.selectedStack === id) {\n        this.deselectStack(id);\n      } else {\n        if (this.state.stacks[id].contents.length >= this.state.game.stackCapacity) {\n          this.deselectStack(this.state.previouslySelectedStack);\n        } else {\n          let oldStackContent = Array.from(this.state.stacks[this.state.previouslySelectedStack].contents);\n          // console.log('old stack content below'); \n          oldStackContent.pop();\n          // console.log(oldStackContent);\n          this.setState((state) => ({\n            stacks: state.stacks.map(\n              el => (el.id === state.previouslySelectedStack) ? {\n                ...el,\n                contents: oldStackContent,\n              } : el\n            )\n          }), function() {this.moveToken(id)})\n        }\n      }\n    }\n  }\n\n  selectStack(id) {\n    let topToken;\n    topToken = this.state.stacks[id].contents[this.state.stacks[id].contents.length - 1];\n    this.setState((state) => ({\n      selectedStack: id,\n      selectedToken: topToken\n    }))\n  }\n\n  deselectStack(id) {\n    // console.log('deselect');\n    this.setState((state) => ({\n      selectedStack: null,\n      selectedToken: null\n    }))\n  }\n\n  moveToken(stackID) {\n    // console.log(stackID);\n    let key = this.state.selectedToken;\n    let newStackContent = Array.from(this.state.stacks[stackID].contents);\n    // console.log(newStackContent);\n    newStackContent.push(this.state.selectedToken);\n    this.deselectStack(stackID);\n    this.setState((state) => ({\n      tokens: state.tokens.map(\n        el => (el.id === key) ? {\n          ...el,\n          xPos: state.stacks[stackID].xPos,\n          yPos: ((-state.stacks[stackID].contents.length * 25) + (state.stacks[stackID].yPos + 103 - 25))\n        } : el\n      ),\n      stacks: state.stacks.map(\n        el => (el.id === stackID) ? {\n          ...el,\n          contents: newStackContent,\n        } : el\n      ),\n      moveCounter: state.moveCounter++\n    }), this.checkForWin)\n    // console.log(this.state.stacks);\n  }\n\n  checkForWin() {\n    console.log('CHECK FOR WIN');\n    for (var i = 0; i < this.state.stacks.length; i++) {\n      // console.log('Stack ' + i);\n      // console.log('Contents: ' + this.state.stacks[i].contents);\n      if (this.state.stacks[i].contents.length !== this.state.game.tokenSet && this.state.stacks[i].contents.length !== 0) {\n        // console.log('Stack not full, quit this check');\n        return\n      }\n      for (var j = 0; j < this.state.stacks[i].contents.length; j++) {\n        console.log('stack '  + i + ', token ' + j);\n        if (this.state.tokens[this.state.stacks[i].contents[j]].color !== this.state.tokens[this.state.stacks[i].contents[0]].color) {\n          // console.log('fail');\n          return\n        }\n      }\n    }\n    this.endGame();\n    console.log('you win');\n  }\n\n  endGame() {\n    this.setState((state) => ({\n      activeView: 'win',\n    }));\n  }\n\n  quitGame() {\n    this.setState((state) => ({\n      activeView: 'start',\n    }));\n  }\n\n  getState() {\n    console.log(this.state);\n  }\n\n\n  render() {\n    let stacks = [];\n    for (var i = 0; i < this.state.stacks.length; i++) {\n      let xPos = this.state.stacks[i].xPos  + '%';\n      let height = (this.state.game.stackCapacity * 45) + 'px';\n      stacks.push(<Stack top=\"50%\" left={xPos} height={height} id={i} function={this.manageStackAction} selected={this.state.selectedStack} />);\n    }\n    let tokens = [];\n    for (var i = 0; i < this.state.tokens.length; i++) {\n      let xPos = this.state.tokens[i].xPos  + '%';\n      let yPos = this.state.tokens[i].yPos  + '%';\n      tokens.push(<Token id={this.state.tokens[i].id} color={this.state.tokens[i].color} xPos={xPos} yPos={yPos} selected={this.state.selectedToken} />);\n    }\n\n    return (\n        <div className=\"App\">\n          <Menu startGame={this.initGame} activeView={this.state.activeView} level={this.state.game.leve} />\n          <Win startGame={this.initGame} activeView={this.state.activeView} level={this.state.game.level} />\n          <Game \n            stacks={this.state.stacks}\n            game={this.state.game}\n            selectStack={this.state.selectedStack}\n            tokens={this.state.tokens}\n            selectedToken={this.state.selectedToken}\n            activeView={this.state.activeView} \n            manageStackAction={this.manageStackAction}\n            quitGame={this.quitGame}\n            level={this.state.game.level}\n            moveCounter={this.state.moveCounter}\n          />\n\n        </div>\n      );\n    }\n  }\n  \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}