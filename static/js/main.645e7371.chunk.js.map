{"version":3,"sources":["logo.svg","stack.js","token.js","menu.js","win.js","game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Stack","props","divStyle","top","this","left","height","id","className","selected","style","onClick","function","React","Component","Token","yPos","xPos","color","Menu","activeView","startGame","Win","Game","stacks","i","length","console","log","push","manageStackAction","selectedStack","tokens","selectedToken","quitGame","App","state","game","tokenSet","colorSet","stackCapacity","previouslySelectedStack","chooseRandomStack","bind","selectStack","deselectStack","moveToken","colors","stackPositions","positionStacks","stack","contents","tokenCounter","j","chosenStack","token","stackPos","setState","stackQuantity","rowQuantity","Math","ceil","fullRowQuantity","remainderRowQuantity","rowInventory","centerYOffset","centerXOffset","coords","stackSet","stackChoice","floor","random","oldStackContent","Array","from","pop","map","el","topToken","stackID","key","newStackContent","checkForWin","endGame","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.645e7371.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\n// import './App.css';\n\nclass Stack extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const divStyle = {\n            top: this.props.top,\n            left: this.props.left,\n            height: this.props.height\n        };\n        let id = this.props.id;\n        let className = 'stack';\n        // console.log(this.props.selected);\n        if (this.props.selected === this.props.id) {\n            className += ' selected';\n        }\n\n        return (\n            <div id={'s' + this.props.id} className={className} style={divStyle} onClick={() => this.props.function(id)}></div>\n        )\n    }\n}\n\nexport default Stack","import React from 'react';\n// import './App.css';\nimport './colors.scss';\n\nclass Token extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        var divStyle = {\n            // backgroundColor: this.props.color,\n            top: this.props.yPos,\n            left: this.props.xPos\n        };\n        let className = 'token ' + this.props.color;\n        if (this.props.selected === this.props.id) {\n            className += ' selected';\n        }\n        return (\n            <div className={className} style={divStyle} id={'t' + this.props.id}></div>\n        )\n    }\n}\n\nexport default Token","import React from 'react';\n// import './App.css';\n\nclass Menu extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let className = 'view';\n        if (this.props.activeView === 'start') {\n            className += ' active';\n        }\n\n        return (\n            <div className={className}>\n                <h1>Stacker</h1>\n                <button className=\"button\" onClick={() => this.props.startGame()}>Play</button>\n            </div>\n        )\n    }\n}\n\nexport default Menu","import React from 'react';\n// import './App.css';\n\nclass Win extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let className = 'view';\n        if (this.props.activeView === 'win') {\n            className += ' active';\n        }\n\n        return (\n            <div className={className}>\n                <h1>You Stacked</h1>\n                <button className=\"button\" onClick={() => this.props.startGame()}>Continue</button>\n            </div>\n        )\n    }\n}\n\nexport default Win","import React from 'react';\n// import './App.css';\nimport Stack from './stack';\nimport Token from './token';\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let className = 'view';\n        if (this.props.activeView === 'game') {\n            className += ' active';\n        }\n\n        let stacks = [];\n        for (var i = 0; i < this.props.stacks.length; i++) {\n            let xPos = 'calc(50vw + ' + this.props.stacks[i].xPos + 'px)';\n            let yPos = 'calc(' + this.props.stacks[i].yPos + 'px + 50vh)';\n            let height = '103px';\n            console.log(this.props.stacks[i].yPos);\n            console.log(yPos);\n            stacks.push(<Stack top={yPos} left={xPos} height={height} id={i} function={this.props.manageStackAction} selected={this.props.selectedStack} />);\n        }\n\n        let tokens = [];\n        for (var i = 0; i < this.props.tokens.length; i++) {\n            let xPos = 'calc(' + this.props.tokens[i].xPos + 'px + 50vw)';\n            let yPos = 'calc(' + this.props.tokens[i].yPos + 'px + 50vh)';\n            tokens.push(<Token id={this.props.tokens[i].id} color={this.props.tokens[i].color} xPos={xPos} yPos={yPos} selected={this.props.selectedToken} />);\n        }\n    \n        return (\n            <div className={className}>\n                <div className=\"center-view\">\n                    {stacks}\n                    {tokens}\n                </div>\n                <div>\n                    <button className=\"button\" onClick={() => this.props.quitGame()}>Exit</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Game","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Stack from './stack';\nimport Token from './token';\nimport Menu from './menu';\nimport Win from './win';\nimport Game from './game';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      activeView: 'start',\n      tokens: [],\n      stacks: [],\n      game: {\n        tokenSet: 4,\n        colorSet: 10,\n        stacks: 19,\n        stackCapacity: 4\n      },\n      selectedStack: null,\n      previouslySelectedStack: null,\n      selectedToken: null\n    }\n    this.chooseRandomStack = this.chooseRandomStack.bind(this);\n    this.startGame = this.startGame.bind(this);\n    this.manageStackAction = this.manageStackAction.bind(this);\n    this.selectStack = this.selectStack.bind(this);\n    this.deselectStack = this.deselectStack.bind(this);\n    this.moveToken = this.moveToken.bind(this);\n    this.quitGame = this.quitGame.bind(this);\n  }\n\n  startGame() {\n    const colors = ['one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten'];\n    let xPosSpacing = 48;\n    var stackPositions = this.positionStacks(this.state.game.stacks);\n    console.log(stackPositions);\n    let stacks = [];\n    for (let i = 0; i < this.state.game.stacks; i++) {\n      let stack = {\n        id: i,\n        xPos: stackPositions[i].xPos,\n        yPos: stackPositions[i].yPos,\n        contents: [],\n        selected: false\n      }\n      stacks.push(stack);\n    }\n    console.log(stacks);\n\n    let tokens = [];\n    let tokenCounter = 0;\n    for (let i = 0; i < (this.state.game.tokenSet); i++) {\n      for (var j = 0; j < this.state.game.colorSet; j++) {\n        \n        let chosenStack = this.chooseRandomStack(stacks);\n        let token = {\n          id: tokenCounter,\n          color: colors[j],\n          stack: chosenStack,\n          stackPos: stacks[chosenStack].contents.length,\n          xPos: stacks[chosenStack].xPos,\n          yPos: (-stacks[chosenStack].contents.length * 25) + (stacks[chosenStack].yPos + 103 - 25)\n        }\n        tokenCounter++;\n        stacks[chosenStack].contents.push(token.id)\n        tokens.push(token);\n      }\n    }\n    this.setState((state) => ({\n      activeView: 'game',\n      stacks: stacks,\n      tokens: tokens\n    }), function() {console.log(this.state.stacks)})\n  }\n\n  positionStacks(stacks) {\n    const maxRowLength = 5;\n    const stackWidth = 48;\n    const stackHeight = 103;\n    const stackSpacer = 12;\n\n    var stackQuantity = stacks;\n    var rowQuantity = Math.ceil(stackQuantity / maxRowLength);\n    var fullRowQuantity = Math.ceil(stackQuantity / rowQuantity);\n    var remainderRowQuantity = stackQuantity % fullRowQuantity;\n    if (remainderRowQuantity === 0) {\n      remainderRowQuantity = fullRowQuantity;\n    }\n    var rowInventory = [];\n    if (stackQuantity < maxRowLength) {\n      rowInventory.push(stackQuantity);\n    } else {\n      rowInventory.push(remainderRowQuantity);\n      for (var i = 0; i < rowQuantity - 1; i++) {\n        rowInventory.push(fullRowQuantity);\n      }\n    }\n    console.log(rowInventory);\n    \n    var stackPositions = [];\n    let centerYOffset = (((rowQuantity * stackHeight) + ((rowQuantity - 1) * stackSpacer)) / 2);\n    for (var i = 0; i < rowInventory.length; i++) {\n      let centerXOffset = (((rowInventory[i] * stackWidth) + ((rowInventory[i] - 1) * stackSpacer)) / 2);\n      for(var j = 0; j < rowInventory[i]; j++) {\n        let coords = {\n          xPos: (stackWidth * j) + (stackSpacer * j) - centerXOffset,\n          yPos: (stackHeight * i) + (stackSpacer * i) - centerYOffset\n        }\n        stackPositions.push(coords);\n      }\n    }\n    console.log(stackPositions);\n    return stackPositions;\n  }\n\n  chooseRandomStack(stackSet) {\n    var stackChoice = Math.floor(Math.random() * this.state.game.stacks);\n    while (stackSet[stackChoice].contents.length > this.state.game.stackCapacity - 1) {\n      stackChoice = Math.floor(Math.random() * this.state.game.stacks)\n    }\n    return stackChoice;\n  }\n\n  manageStackAction(id) {\n    if (this.state.selectedStack === null) {\n      if (this.state.stacks[id].contents.length > 0) {\n        this.setState((state) => ({\n          previouslySelectedStack: id\n        }))\n        this.selectStack(id);\n      } else {\n        return\n      }\n    } else {\n      if (this.state.selectedStack === id) {\n        this.deselectStack(id);\n      } else {\n        if (this.state.stacks[id].contents.length >= this.state.game.colorSet) {\n          this.deselectStack(this.state.previouslySelectedStack);\n        } else {\n          let oldStackContent = Array.from(this.state.stacks[this.state.previouslySelectedStack].contents);\n          // console.log('old stack content below'); \n          oldStackContent.pop();\n          // console.log(oldStackContent);\n          this.setState((state) => ({\n            stacks: state.stacks.map(\n              el => (el.id === state.previouslySelectedStack) ? {\n                ...el,\n                contents: oldStackContent,\n              } : el\n            )\n          }), function() {this.moveToken(id)})\n        }\n      }\n    }\n  }\n\n  selectStack(id) {\n    let topToken;\n    topToken = this.state.stacks[id].contents[this.state.stacks[id].contents.length - 1];\n    this.setState((state) => ({\n      selectedStack: id,\n      selectedToken: topToken\n    }))\n  }\n\n  deselectStack(id) {\n    // console.log('deselect');\n    this.setState((state) => ({\n      selectedStack: null,\n      selectedToken: null\n    }))\n  }\n\n  moveToken(stackID) {\n    // console.log(stackID);\n    let key = this.state.selectedToken;\n    let newStackContent = Array.from(this.state.stacks[stackID].contents);\n    // console.log(newStackContent);\n    newStackContent.push(this.state.selectedToken);\n    this.deselectStack(stackID);\n    this.setState((state) => ({\n      tokens: state.tokens.map(\n        el => (el.id === key) ? {\n          ...el,\n          xPos: state.stacks[stackID].xPos,\n          yPos: ((-state.stacks[stackID].contents.length * 25) + (state.stacks[stackID].yPos + 103 - 25))\n        } : el\n      ),\n      stacks: state.stacks.map(\n        el => (el.id === stackID) ? {\n          ...el,\n          contents: newStackContent,\n        } : el\n      )\n    }), this.checkForWin)\n    // console.log(this.state.stacks);\n  }\n\n  checkForWin() {\n    console.log('CHECK FOR WIN');\n    for (var i = 0; i < this.state.stacks.length; i++) {\n      // console.log('Stack ' + i);\n      // console.log('Contents: ' + this.state.stacks[i].contents);\n      if (this.state.stacks[i].contents.length !== this.state.game.tokenSet && this.state.stacks[i].contents.length !== 0) {\n        // console.log('Stack not full, quit this check');\n        return\n      }\n      for (var j = 0; j < this.state.stacks[i].contents.length; j++) {\n        console.log('stack '  + i + ', token ' + j);\n        if (this.state.tokens[this.state.stacks[i].contents[j]].color !== this.state.tokens[this.state.stacks[i].contents[0]].color) {\n          // console.log('fail');\n          return\n        }\n      }\n    }\n    this.endGame();\n    console.log('you win');\n  }\n\n  endGame() {\n    this.setState((state) => ({\n      activeView: 'win',\n    }));\n  }\n\n  quitGame() {\n    this.setState((state) => ({\n      activeView: 'start',\n    }));\n  }\n\n  getState() {\n    console.log(this.state);\n  }\n\n\n  render() {\n    let stacks = [];\n    for (var i = 0; i < this.state.stacks.length; i++) {\n      let xPos = this.state.stacks[i].xPos  + '%';\n      let height = (this.state.game.stackCapacity * 45) + 'px';\n      stacks.push(<Stack top=\"50%\" left={xPos} height={height} id={i} function={this.manageStackAction} selected={this.state.selectedStack} />);\n    }\n    let tokens = [];\n    for (var i = 0; i < this.state.tokens.length; i++) {\n      let xPos = this.state.tokens[i].xPos  + '%';\n      let yPos = this.state.tokens[i].yPos  + '%';\n      tokens.push(<Token id={this.state.tokens[i].id} color={this.state.tokens[i].color} xPos={xPos} yPos={yPos} selected={this.state.selectedToken} />);\n    }\n\n    return (\n        <div className=\"App\">\n          <Menu startGame={this.startGame} activeView={this.state.activeView} />\n          <Win startGame={this.startGame} activeView={this.state.activeView} />\n          <Game \n            stacks={this.state.stacks}\n            game={this.state.game}\n            selectStack={this.state.selectedStack}\n            tokens={this.state.tokens}\n            selectedToken={this.state.selectedToken}\n            activeView={this.state.activeView} \n            manageStackAction={this.manageStackAction}\n            quitGame={this.quitGame}\n          />\n\n        </div>\n      );\n    }\n  }\n  \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}