{"ast":null,"code":"var _jsxFileName = \"/Users/david/repos/stacker/src/token.js\";\nimport React from 'react'; // import './App.css';\n\nimport './colors.scss';\n\nclass Token extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    var divStyle = {\n      // backgroundColor: this.props.color,\n      top: this.props.yPos,\n      left: this.props.xPos\n    };\n    let className = 'token ' + this.props.color;\n\n    if (this.props.selected === this.props.id) {\n      className += ' selected';\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: className,\n      style: divStyle,\n      id: 't' + this.props.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default Token;","map":{"version":3,"sources":["/Users/david/repos/stacker/src/token.js"],"names":["React","Token","Component","constructor","props","render","divStyle","top","yPos","left","xPos","className","color","selected","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,eAAP;;AAEA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,QAAQ,GAAG;AACX;AACAC,MAAAA,GAAG,EAAE,KAAKH,KAAL,CAAWI,IAFL;AAGXC,MAAAA,IAAI,EAAE,KAAKL,KAAL,CAAWM;AAHN,KAAf;AAKA,QAAIC,SAAS,GAAG,WAAW,KAAKP,KAAL,CAAWQ,KAAtC;;AACA,QAAI,KAAKR,KAAL,CAAWS,QAAX,KAAwB,KAAKT,KAAL,CAAWU,EAAvC,EAA2C;AACvCH,MAAAA,SAAS,IAAI,WAAb;AACH;;AACD,wBACI;AAAK,MAAA,SAAS,EAAEA,SAAhB;AAA2B,MAAA,KAAK,EAAEL,QAAlC;AAA4C,MAAA,EAAE,EAAE,MAAM,KAAKF,KAAL,CAAWU,EAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAlB+B;;AAqBpC,eAAeb,KAAf","sourcesContent":["import React from 'react';\n// import './App.css';\nimport './colors.scss';\n\nclass Token extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        var divStyle = {\n            // backgroundColor: this.props.color,\n            top: this.props.yPos,\n            left: this.props.xPos\n        };\n        let className = 'token ' + this.props.color;\n        if (this.props.selected === this.props.id) {\n            className += ' selected';\n        }\n        return (\n            <div className={className} style={divStyle} id={'t' + this.props.id}></div>\n        )\n    }\n}\n\nexport default Token"]},"metadata":{},"sourceType":"module"}