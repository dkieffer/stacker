{"ast":null,"code":"import _objectSpread from\"/Users/david/repos/stacker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/david/repos/stacker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/david/repos/stacker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/david/repos/stacker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/david/repos/stacker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/david/repos/stacker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import logo from\"./logo.svg\";import'./App.css';import Stack from'./stack';import Token from'./token';import Menu from'./menu';import Win from'./win';import Game from'./game';var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.state={activeView:'start',tokens:[],stacks:[],game:{tokenSet:4,colorSet:2,stacks:3,stackCapacity:4,level:1},selectedStack:null,previouslySelectedStack:null,selectedToken:null};_this.chooseRandomStack=_this.chooseRandomStack.bind(_assertThisInitialized(_this));_this.startGame=_this.startGame.bind(_assertThisInitialized(_this));_this.manageStackAction=_this.manageStackAction.bind(_assertThisInitialized(_this));_this.selectStack=_this.selectStack.bind(_assertThisInitialized(_this));_this.deselectStack=_this.deselectStack.bind(_assertThisInitialized(_this));_this.moveToken=_this.moveToken.bind(_assertThisInitialized(_this));_this.quitGame=_this.quitGame.bind(_assertThisInitialized(_this));_this.initGame=_this.initGame.bind(_assertThisInitialized(_this));return _this;}_createClass(App,[{key:\"initGame\",value:function initGame(lvlup){console.log('init game');if(!localStorage.getItem('level')){localStorage.setItem('level',1);}var lvl=localStorage.getItem('level');if(lvlup){lvl++;}localStorage.setItem('level',lvl);this.setState(function(state){return{game:_objectSpread({},state.game,{level:lvl})};},function(){this.setupGame();});}},{key:\"setupGame\",value:function setupGame(){console.log('setup game');var stackQuantity=Math.floor(this.state.game.level*0.25)+3;console.log('stack quantity: '+stackQuantity);this.setState(function(state){return{game:_objectSpread({},state.game,{stacks:stackQuantity,colorSet:stackQuantity-1})};},function(){this.startGame();});}},{key:\"startGame\",value:function startGame(){console.log('start game');var colors=['one','two','three','four','five','six','seven','eight','nine','ten'];var xPosSpacing=48;var stackPositions=this.positionStacks(this.state.game.stacks);console.log(stackPositions);var stacks=[];for(var i=0;i<this.state.game.stacks;i++){var stack={id:i,xPos:stackPositions[i].xPos,yPos:stackPositions[i].yPos,contents:[],selected:false};stacks.push(stack);}console.log(stacks);var tokens=[];var tokenCounter=0;for(var _i=0;_i<this.state.game.tokenSet;_i++){for(var j=0;j<this.state.game.colorSet;j++){var chosenStack=this.chooseRandomStack(stacks);var token={id:tokenCounter,color:colors[j],stack:chosenStack,stackPos:stacks[chosenStack].contents.length,xPos:stacks[chosenStack].xPos,yPos:-stacks[chosenStack].contents.length*25+(stacks[chosenStack].yPos+103-25)};tokenCounter++;stacks[chosenStack].contents.push(token.id);tokens.push(token);}}console.log('ready to set state');this.setState(function(state){return{activeView:'game',stacks:stacks,tokens:tokens};},function(){console.log(this.state.stacks);});}},{key:\"positionStacks\",value:function positionStacks(stacks){console.log('position stacks');var maxRowLength=5;var stackWidth=48;var stackHeight=103;var stackSpacer=12;var stackQuantity=stacks;var rowQuantity=Math.ceil(stackQuantity/maxRowLength);var fullRowQuantity=Math.ceil(stackQuantity/rowQuantity);var remainderRowQuantity=stackQuantity%fullRowQuantity;if(remainderRowQuantity===0){remainderRowQuantity=fullRowQuantity;}var rowInventory=[];if(stackQuantity<maxRowLength){rowInventory.push(stackQuantity);}else{rowInventory.push(remainderRowQuantity);for(var i=0;i<rowQuantity-1;i++){rowInventory.push(fullRowQuantity);}}// console.log(rowInventory);\nvar stackPositions=[];var centerYOffset=(rowQuantity*stackHeight+(rowQuantity-1)*stackSpacer)/2;for(var i=0;i<rowInventory.length;i++){var centerXOffset=(rowInventory[i]*stackWidth+(rowInventory[i]-1)*stackSpacer)/2;for(var j=0;j<rowInventory[i];j++){var coords={xPos:stackWidth*j+stackSpacer*j-centerXOffset,yPos:stackHeight*i+stackSpacer*i-centerYOffset};stackPositions.push(coords);}}// console.log(stackPositions);\nreturn stackPositions;}},{key:\"chooseRandomStack\",value:function chooseRandomStack(stackSet){console.log('choose random stack');var stackChoice=Math.floor(Math.random()*this.state.game.stacks);while(stackSet[stackChoice].contents.length>this.state.game.stackCapacity-1){stackChoice=Math.floor(Math.random()*this.state.game.stacks);}return stackChoice;}},{key:\"manageStackAction\",value:function manageStackAction(id){if(this.state.selectedStack===null){if(this.state.stacks[id].contents.length>0){this.setState(function(state){return{previouslySelectedStack:id};});this.selectStack(id);}else{return;}}else{if(this.state.selectedStack===id){this.deselectStack(id);}else{if(this.state.stacks[id].contents.length>=this.state.game.stackCapacity){this.deselectStack(this.state.previouslySelectedStack);}else{var oldStackContent=Array.from(this.state.stacks[this.state.previouslySelectedStack].contents);// console.log('old stack content below'); \noldStackContent.pop();// console.log(oldStackContent);\nthis.setState(function(state){return{stacks:state.stacks.map(function(el){return el.id===state.previouslySelectedStack?_objectSpread({},el,{contents:oldStackContent}):el;})};},function(){this.moveToken(id);});}}}}},{key:\"selectStack\",value:function selectStack(id){var topToken;topToken=this.state.stacks[id].contents[this.state.stacks[id].contents.length-1];this.setState(function(state){return{selectedStack:id,selectedToken:topToken};});}},{key:\"deselectStack\",value:function deselectStack(id){// console.log('deselect');\nthis.setState(function(state){return{selectedStack:null,selectedToken:null};});}},{key:\"moveToken\",value:function moveToken(stackID){// console.log(stackID);\nvar key=this.state.selectedToken;var newStackContent=Array.from(this.state.stacks[stackID].contents);// console.log(newStackContent);\nnewStackContent.push(this.state.selectedToken);this.deselectStack(stackID);this.setState(function(state){return{tokens:state.tokens.map(function(el){return el.id===key?_objectSpread({},el,{xPos:state.stacks[stackID].xPos,yPos:-state.stacks[stackID].contents.length*25+(state.stacks[stackID].yPos+103-25)}):el;}),stacks:state.stacks.map(function(el){return el.id===stackID?_objectSpread({},el,{contents:newStackContent}):el;})};},this.checkForWin);// console.log(this.state.stacks);\n}},{key:\"checkForWin\",value:function checkForWin(){console.log('CHECK FOR WIN');for(var i=0;i<this.state.stacks.length;i++){// console.log('Stack ' + i);\n// console.log('Contents: ' + this.state.stacks[i].contents);\nif(this.state.stacks[i].contents.length!==this.state.game.tokenSet&&this.state.stacks[i].contents.length!==0){// console.log('Stack not full, quit this check');\nreturn;}for(var j=0;j<this.state.stacks[i].contents.length;j++){console.log('stack '+i+', token '+j);if(this.state.tokens[this.state.stacks[i].contents[j]].color!==this.state.tokens[this.state.stacks[i].contents[0]].color){// console.log('fail');\nreturn;}}}this.endGame();console.log('you win');}},{key:\"endGame\",value:function endGame(){this.setState(function(state){return{activeView:'win'};});}},{key:\"quitGame\",value:function quitGame(){this.setState(function(state){return{activeView:'start'};});}},{key:\"getState\",value:function getState(){console.log(this.state);}},{key:\"render\",value:function render(){var stacks=[];for(var i=0;i<this.state.stacks.length;i++){var xPos=this.state.stacks[i].xPos+'%';var height=this.state.game.stackCapacity*45+'px';stacks.push(/*#__PURE__*/React.createElement(Stack,{top:\"50%\",left:xPos,height:height,id:i,function:this.manageStackAction,selected:this.state.selectedStack}));}var tokens=[];for(var i=0;i<this.state.tokens.length;i++){var _xPos=this.state.tokens[i].xPos+'%';var yPos=this.state.tokens[i].yPos+'%';tokens.push(/*#__PURE__*/React.createElement(Token,{id:this.state.tokens[i].id,color:this.state.tokens[i].color,xPos:_xPos,yPos:yPos,selected:this.state.selectedToken}));}return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(Menu,{startGame:this.initGame,activeView:this.state.activeView,level:this.state.game.leve}),/*#__PURE__*/React.createElement(Win,{startGame:this.initGame,activeView:this.state.activeView,level:this.state.game.level}),/*#__PURE__*/React.createElement(Game,{stacks:this.state.stacks,game:this.state.game,selectStack:this.state.selectedStack,tokens:this.state.tokens,selectedToken:this.state.selectedToken,activeView:this.state.activeView,manageStackAction:this.manageStackAction,quitGame:this.quitGame,level:this.state.game.level}));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/david/repos/stacker/src/App.js"],"names":["React","Stack","Token","Menu","Win","Game","App","props","state","activeView","tokens","stacks","game","tokenSet","colorSet","stackCapacity","level","selectedStack","previouslySelectedStack","selectedToken","chooseRandomStack","bind","startGame","manageStackAction","selectStack","deselectStack","moveToken","quitGame","initGame","lvlup","console","log","localStorage","getItem","setItem","lvl","setState","setupGame","stackQuantity","Math","floor","colors","xPosSpacing","stackPositions","positionStacks","i","stack","id","xPos","yPos","contents","selected","push","tokenCounter","j","chosenStack","token","color","stackPos","length","maxRowLength","stackWidth","stackHeight","stackSpacer","rowQuantity","ceil","fullRowQuantity","remainderRowQuantity","rowInventory","centerYOffset","centerXOffset","coords","stackSet","stackChoice","random","oldStackContent","Array","from","pop","map","el","topToken","stackID","key","newStackContent","checkForWin","endGame","height","leve","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Stack from './stack';\nimport Token from './token';\nimport Menu from './menu';\nimport Win from './win';\nimport Game from './game';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      activeView: 'start',\n      tokens: [],\n      stacks: [],\n      game: {\n        tokenSet: 4,\n        colorSet: 2,\n        stacks: 3,\n        stackCapacity: 4,\n        level: 1\n      },\n      selectedStack: null,\n      previouslySelectedStack: null,\n      selectedToken: null\n    }\n    this.chooseRandomStack = this.chooseRandomStack.bind(this);\n    this.startGame = this.startGame.bind(this);\n    this.manageStackAction = this.manageStackAction.bind(this);\n    this.selectStack = this.selectStack.bind(this);\n    this.deselectStack = this.deselectStack.bind(this);\n    this.moveToken = this.moveToken.bind(this);\n    this.quitGame = this.quitGame.bind(this);\n    this.initGame = this.initGame.bind(this);\n  }\n\n  initGame(lvlup) {\n    console.log('init game');\n    if (!localStorage.getItem('level')) {\n      localStorage.setItem('level', 1);\n    }\n    let lvl = localStorage.getItem('level');\n    if (lvlup) {\n      lvl++;\n    }\n    localStorage.setItem('level', lvl);\n\n    this.setState((state) => ({\n      game: {\n        ...state.game,\n        level: lvl\n      }\n    }), function() {this.setupGame()})\n  }\n\n  setupGame() {\n    console.log('setup game');\n    var stackQuantity = (Math.floor(this.state.game.level * 0.25) + 3);\n    console.log('stack quantity: ' + stackQuantity);\n    this.setState((state) => ({\n      game: {\n        ...state.game,\n        stacks: stackQuantity,\n        colorSet: stackQuantity - 1\n      }\n    }), function() {this.startGame()})\n  }\n\n  startGame() {\n    console.log('start game');\n    const colors = ['one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten'];\n    let xPosSpacing = 48;\n    var stackPositions = this.positionStacks(this.state.game.stacks);\n    console.log(stackPositions);\n    let stacks = [];\n    for (let i = 0; i < this.state.game.stacks; i++) {\n      let stack = {\n        id: i,\n        xPos: stackPositions[i].xPos,\n        yPos: stackPositions[i].yPos,\n        contents: [],\n        selected: false\n      }\n      stacks.push(stack);\n    }\n    console.log(stacks);\n\n    let tokens = [];\n    let tokenCounter = 0;\n    for (let i = 0; i < (this.state.game.tokenSet); i++) {\n      for (var j = 0; j < this.state.game.colorSet; j++) {\n        \n        let chosenStack = this.chooseRandomStack(stacks);\n        let token = {\n          id: tokenCounter,\n          color: colors[j],\n          stack: chosenStack,\n          stackPos: stacks[chosenStack].contents.length,\n          xPos: stacks[chosenStack].xPos,\n          yPos: (-stacks[chosenStack].contents.length * 25) + (stacks[chosenStack].yPos + 103 - 25)\n        }\n        tokenCounter++;\n        stacks[chosenStack].contents.push(token.id)\n        tokens.push(token);\n      }\n    }\n    console.log('ready to set state');\n    this.setState((state) => ({\n      activeView: 'game',\n      stacks: stacks,\n      tokens: tokens\n    }), function() {console.log(this.state.stacks)})\n  }\n\n  positionStacks(stacks) {\n    console.log('position stacks');\n    const maxRowLength = 5;\n    const stackWidth = 48;\n    const stackHeight = 103;\n    const stackSpacer = 12;\n\n    var stackQuantity = stacks;\n    var rowQuantity = Math.ceil(stackQuantity / maxRowLength);\n    var fullRowQuantity = Math.ceil(stackQuantity / rowQuantity);\n    var remainderRowQuantity = stackQuantity % fullRowQuantity;\n    if (remainderRowQuantity === 0) {\n      remainderRowQuantity = fullRowQuantity;\n    }\n    var rowInventory = [];\n    if (stackQuantity < maxRowLength) {\n      rowInventory.push(stackQuantity);\n    } else {\n      rowInventory.push(remainderRowQuantity);\n      for (var i = 0; i < rowQuantity - 1; i++) {\n        rowInventory.push(fullRowQuantity);\n      }\n    }\n    // console.log(rowInventory);\n    \n    var stackPositions = [];\n    let centerYOffset = (((rowQuantity * stackHeight) + ((rowQuantity - 1) * stackSpacer)) / 2);\n    for (var i = 0; i < rowInventory.length; i++) {\n      let centerXOffset = (((rowInventory[i] * stackWidth) + ((rowInventory[i] - 1) * stackSpacer)) / 2);\n      for(var j = 0; j < rowInventory[i]; j++) {\n        let coords = {\n          xPos: (stackWidth * j) + (stackSpacer * j) - centerXOffset,\n          yPos: (stackHeight * i) + (stackSpacer * i) - centerYOffset\n        }\n        stackPositions.push(coords);\n      }\n    }\n    // console.log(stackPositions);\n    return stackPositions;\n  }\n\n  chooseRandomStack(stackSet) {\n    console.log('choose random stack');\n    var stackChoice = Math.floor(Math.random() * this.state.game.stacks);\n    while (stackSet[stackChoice].contents.length > this.state.game.stackCapacity - 1) {\n      stackChoice = Math.floor(Math.random() * this.state.game.stacks)\n    }\n    return stackChoice;\n  }\n\n  manageStackAction(id) {\n    if (this.state.selectedStack === null) {\n      if (this.state.stacks[id].contents.length > 0) {\n        this.setState((state) => ({\n          previouslySelectedStack: id\n        }))\n        this.selectStack(id);\n      } else {\n        return\n      }\n    } else {\n      if (this.state.selectedStack === id) {\n        this.deselectStack(id);\n      } else {\n        if (this.state.stacks[id].contents.length >= this.state.game.stackCapacity) {\n          this.deselectStack(this.state.previouslySelectedStack);\n        } else {\n          let oldStackContent = Array.from(this.state.stacks[this.state.previouslySelectedStack].contents);\n          // console.log('old stack content below'); \n          oldStackContent.pop();\n          // console.log(oldStackContent);\n          this.setState((state) => ({\n            stacks: state.stacks.map(\n              el => (el.id === state.previouslySelectedStack) ? {\n                ...el,\n                contents: oldStackContent,\n              } : el\n            )\n          }), function() {this.moveToken(id)})\n        }\n      }\n    }\n  }\n\n  selectStack(id) {\n    let topToken;\n    topToken = this.state.stacks[id].contents[this.state.stacks[id].contents.length - 1];\n    this.setState((state) => ({\n      selectedStack: id,\n      selectedToken: topToken\n    }))\n  }\n\n  deselectStack(id) {\n    // console.log('deselect');\n    this.setState((state) => ({\n      selectedStack: null,\n      selectedToken: null\n    }))\n  }\n\n  moveToken(stackID) {\n    // console.log(stackID);\n    let key = this.state.selectedToken;\n    let newStackContent = Array.from(this.state.stacks[stackID].contents);\n    // console.log(newStackContent);\n    newStackContent.push(this.state.selectedToken);\n    this.deselectStack(stackID);\n    this.setState((state) => ({\n      tokens: state.tokens.map(\n        el => (el.id === key) ? {\n          ...el,\n          xPos: state.stacks[stackID].xPos,\n          yPos: ((-state.stacks[stackID].contents.length * 25) + (state.stacks[stackID].yPos + 103 - 25))\n        } : el\n      ),\n      stacks: state.stacks.map(\n        el => (el.id === stackID) ? {\n          ...el,\n          contents: newStackContent,\n        } : el\n      )\n    }), this.checkForWin)\n    // console.log(this.state.stacks);\n  }\n\n  checkForWin() {\n    console.log('CHECK FOR WIN');\n    for (var i = 0; i < this.state.stacks.length; i++) {\n      // console.log('Stack ' + i);\n      // console.log('Contents: ' + this.state.stacks[i].contents);\n      if (this.state.stacks[i].contents.length !== this.state.game.tokenSet && this.state.stacks[i].contents.length !== 0) {\n        // console.log('Stack not full, quit this check');\n        return\n      }\n      for (var j = 0; j < this.state.stacks[i].contents.length; j++) {\n        console.log('stack '  + i + ', token ' + j);\n        if (this.state.tokens[this.state.stacks[i].contents[j]].color !== this.state.tokens[this.state.stacks[i].contents[0]].color) {\n          // console.log('fail');\n          return\n        }\n      }\n    }\n    this.endGame();\n    console.log('you win');\n  }\n\n  endGame() {\n    this.setState((state) => ({\n      activeView: 'win',\n    }));\n  }\n\n  quitGame() {\n    this.setState((state) => ({\n      activeView: 'start',\n    }));\n  }\n\n  getState() {\n    console.log(this.state);\n  }\n\n\n  render() {\n    let stacks = [];\n    for (var i = 0; i < this.state.stacks.length; i++) {\n      let xPos = this.state.stacks[i].xPos  + '%';\n      let height = (this.state.game.stackCapacity * 45) + 'px';\n      stacks.push(<Stack top=\"50%\" left={xPos} height={height} id={i} function={this.manageStackAction} selected={this.state.selectedStack} />);\n    }\n    let tokens = [];\n    for (var i = 0; i < this.state.tokens.length; i++) {\n      let xPos = this.state.tokens[i].xPos  + '%';\n      let yPos = this.state.tokens[i].yPos  + '%';\n      tokens.push(<Token id={this.state.tokens[i].id} color={this.state.tokens[i].color} xPos={xPos} yPos={yPos} selected={this.state.selectedToken} />);\n    }\n\n    return (\n        <div className=\"App\">\n          <Menu startGame={this.initGame} activeView={this.state.activeView} level={this.state.game.leve} />\n          <Win startGame={this.initGame} activeView={this.state.activeView} level={this.state.game.level} />\n          <Game \n            stacks={this.state.stacks}\n            game={this.state.game}\n            selectStack={this.state.selectedStack}\n            tokens={this.state.tokens}\n            selectedToken={this.state.selectedToken}\n            activeView={this.state.activeView} \n            manageStackAction={this.manageStackAction}\n            quitGame={this.quitGame}\n            level={this.state.game.level}\n          />\n\n        </div>\n      );\n    }\n  }\n  \nexport default App;\n"]},"metadata":{},"sourceType":"module"}